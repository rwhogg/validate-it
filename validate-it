#!/usr/bin/env node
const fs = require("fs");
const meow = require("meow");
const mime = require("mime-types");

const cli = meow(`
    Usage
        $ validate-it <path> <path>...
`);
const validators = {};

async function main()
{
    const results = await Promise.all(cli.input.map(async function(path)
    {
        const fullType = mime.lookup(path);
        if(!fullType)
        {
            console.error(`File ${path} is of invalid or unknown type!`);
            return 2;
        }

        let valid;
        try
        {
            valid = await validate(path, fullType);
        }
        catch(e)
        {
            console.error(e.message);
            return 2;
        }

        if(valid)
        {
            console.log(`File ${path} is valid!`);
            return 0;
        }
        else
        {
            console.error(`File ${path} is not valid!`);
            return 1;
        }
    }));

    let result = 0;
    if(results.includes(2))
    {
        result = 2;
    }
    else if(results.includes(1))
    {
        result = 1;
    }
    process.exit(result);
}

async function validate(path, fullType)
{
    const type = fullType.split("/")[1];
    // FIXME: for the type, strip out the "x-" prefix if necessary
    
    try
    {
        validators[type] = validators[type] || require(`${__dirname}/validators/${type}.validator.js`);
    }
    catch(e)
    {
        throw new Error(`No validator exists for MIME type ${fullType}. If this is a commonly-used file type, please` +
                        " consider submitting a PR to https://github.com/rwhogg/validate-it to add support for it.");
    }
    const validator = validators[type];
    const text = fs.readFileSync(path, {encoding: "utf-8"});
    return await validator(text);
}

main();
